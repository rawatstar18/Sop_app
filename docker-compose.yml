version: '3.8'

services:
  mongo:
    image: mongo:7.0
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: appdb
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build: 
      context: .
      dockerfile: dockerfile
    container_name: backend
    restart: unless-stopped
    depends_on:
      mongo:
        condition: service_healthy
    ports:
      - "8000:8000"
    environment:
      MONGO_HOST: mongo
      MONGO_PORT: 27017
      MONGO_USERNAME: admin
      MONGO_PASSWORD: admin
      MONGO_DB_NAME: appdb
      SECRET_KEY: your-super-secret-key-change-in-production
      ALLOWED_ORIGINS: "http://localhost:8080,http://127.0.0.1:8080,http://192.168.130.21:8080"
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: nginx:alpine
    container_name: frontend
    restart: unless-stopped
    volumes:
      - ./frontend:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8080:80"
    depends_on:
      - backend
    networks:
      - app-network

volumes:
  mongo-data:
    driver: local

networks:
  app-network:
    driver: bridge